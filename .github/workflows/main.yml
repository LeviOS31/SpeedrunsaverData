# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore

    - name: Test with coverage
      run: |
        dotnet test --collect:"XPlat Code Coverage;Format=opencover;Exclude=[DataAccess]*" 
      continue-on-error: true

    - name: Install ReportGenerator tool
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Create Coverage Report
      run: reportgenerator -reports:**/coverage.opencover.xml -targetdir:coverage/ -reporttypes:JsonSummary

    - name: Upload coverage to artifact
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: coverage/

    - name: Fail if coverage is under 70%
      run: |
        jsonFile="coverage/Summary.json"
        lineCoverage=$(grep -Po '"linecoverage": \K[0-9.]+' "$jsonFile")
        echo "Line coverage is $lineCoverage%"
                if (( $(echo "$lineCoverage < 70" |bc -l) )); then
          echo "Code coverage is less than 70%"
          exit 1
        fi
    - name: Dependency Check
      uses: dependency-check/Dependency-Check_Action@1.1.0
      with:
          project: 'All Projects'
          path: '.'
          format: 'HTML'

      
    - name: Upload Dependency Check Report
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: reports/dependency-check-report.html

    - name: Run Codacy Analysis CLI
      uses: codacy/codacy-analysis-cli-action@master
